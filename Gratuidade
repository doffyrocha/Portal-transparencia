import requests
import pandas as pd
from tqdm import tqdm

# === CONFIGURA√á√ïES ===
ANO = 2024
SIGLA_ENTIDADE = "SENAI"

# Lista dos 27 departamentos regionais
departamentos = [
    "SENAI-AC", "SENAI-AL", "SENAI-AM", "SENAI-AP", "SENAI-BA",
    "SENAI-CE", "SENAI-DF", "SENAI-ES", "SENAI-GO", "SENAI-MA",
    "SENAI-MG", "SENAI-MS", "SENAI-MT", "SENAI-PA", "SENAI-PB",
    "SENAI-PE", "SENAI-PI", "SENAI-PR", "SENAI-RJ", "SENAI-RN",
    "SENAI-RO", "SENAI-RR", "SENAI-RS", "SENAI-SC", "SENAI-SE",
    "SENAI-SP", "SENAI-TO"
]

# URL base da API de Gratuidade
URL_BASE = "https://sistematransparenciaweb.com.br/api-gratuidade/publico/gratuidades/vagas/entidades/{siglaEntidadeNacional}/departamentos/{departamento}/gratuidade"

# Lista para armazenar todos os DataFrames
dados_todos = []

print(f"üì° Coletando dados de Gratuidade SENAI ({ANO})...")

for dep in tqdm(departamentos, desc="Baixando dados dos departamentos"):
    try:
        url = URL_BASE.format(siglaEntidadeNacional=SIGLA_ENTIDADE, departamento=dep)
        params = {"ano": ANO}
        response = requests.get(url, params=params, timeout=20)

        if response.status_code == 200:
            data = response.json()
            if data:
                # Flatten estrutura aninhada
                base_info = {
                    "UF": dep,
                    "nomeEntidadeRegional": data.get("nomeEntidadeRegional"),
                    "ano": data.get("ano"),
                    "qntPlanejada": data.get("qntPlanejada"),
                    "qntRealizada": data.get("qntRealizada"),
                    "totalHoraAlunoRealizada": data.get("totalHoraAlunoRealizada"),
                    "horaAlunoRealizadaGratuita": data.get("horaAlunoRealizadaGratuita"),
                    "qntHoraAlunoRealizadaNaoGratuita": data.get("qntHoraAlunoRealizadaNaoGratuita"),
                    "porcentagemValorHoraAlunoRealizadoGratuito": data.get("porcentagemValorHoraAlunoRealizadoGratuito"),
                    "dataAtualizacao": data.get("dataAtualizacao"),
                    "titulo": data.get("titulo"),
                    "nota": data.get("nota"),
                    "fonte": data.get("fonte"),
                }

                # Extrair programas e produtos, se existirem
                programas = data.get("programas", [])
                if programas:
                    for prog in programas:
                        prog_info = base_info.copy()
                        prog_info["programa_descricao"] = prog.get("descricao")
                        prog_info["programa_qntPlanejada"] = prog.get("qntPlanejada")
                        prog_info["programa_qntRealizada"] = prog.get("qntRealizada")
                        prog_info["programa_qntTotalHoraAlunoRealizada"] = prog.get("qntTotalHoraAlunoRealizada")

                        produtos = prog.get("produtos", [])
                        if produtos:
                            for prod in produtos:
                                prod_info = prog_info.copy()
                                prod_info["produto_descricao"] = prod.get("descricao")
                                prod_info["produto_qntPlanejada"] = prod.get("qntPlanejada")
                                prod_info["produto_qntRealizada"] = prod.get("qntRealizada")
                                dados_todos.append(prod_info)
                        else:
                            dados_todos.append(prog_info)
                else:
                    dados_todos.append(base_info)
        else:
            print(f"‚ö†Ô∏è {dep}: Erro {response.status_code}")
    except Exception as e:
        print(f"‚ùå Erro ao processar {dep}: {e}")

# Converter tudo em DataFrame
if dados_todos:
    df_final = pd.DataFrame(dados_todos)
    df_final = df_final.dropna(axis=1, how="all")

    # === üß≠ CORRE√á√ÉO DO FORMATO DE DATA ===
    if "dataAtualizacao" in df_final.columns:
        df_final["dataAtualizacao"] = pd.to_datetime(
            df_final["dataAtualizacao"], unit="ms", errors="coerce"
        ).dt.strftime("%d/%m/%Y")

    # Exportar para Excel
    nome_arquivo = f"gratuidade_senai_{ANO}.xlsx"
    df_final.to_excel(nome_arquivo, index=False)
    print(f"\n‚úÖ Arquivo salvo com sucesso: {nome_arquivo}")
    print(f"üìä Total de registros: {len(df_final)}")
else:
    print("‚ö†Ô∏è Nenhum dado retornado pela API.")
